-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\PID_Discrete\PID.vhd
-- Created: 2022-04-11 15:19:06
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Y                             ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PID
-- Source Path: PID_Discrete/PID
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PID IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        U                                 :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En8
        Setpoint                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        P                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        I                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        D                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        N                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        ce_out                            :   OUT   std_logic;
        Y                                 :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En8
        );
END PID;


ARCHITECTURE rtl OF PID IS

  -- Component Declarations
  COMPONENT Discrete_PID_Controller
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
          P                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          I                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          D                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          N                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
          y                               :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Discrete_PID_Controller
    USE ENTITY work.Discrete_PID_Controller(rtl);

  -- Signals
  SIGNAL U_signed                         : signed(23 DOWNTO 0);  -- sfix24_En8
  SIGNAL Setpoint_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Sum_sub_cast                     : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Sum_sub_cast_1                   : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Sum_out1                         : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Discrete_PID_Controller_out1     : std_logic_vector(19 DOWNTO 0);  -- ufix20

BEGIN
  u_Discrete_PID_Controller : Discrete_PID_Controller
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              u => std_logic_vector(Sum_out1),  -- sfix32_En16
              P => P,  -- sfix32_En24
              I => I,  -- sfix32_En24
              D => D,  -- sfix32_En24
              N => N,  -- sfix32_En24
              y => Discrete_PID_Controller_out1  -- sfix20_En8
              );

  U_signed <= signed(U);

  Setpoint_signed <= signed(Setpoint);

  Sum_sub_cast <= U_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Sum_sub_cast_1 <= resize(Setpoint_signed(31 DOWNTO 8), 32);
  Sum_out1 <= Sum_sub_cast - Sum_sub_cast_1;

  ce_out <= clk_enable;

  Y <= Discrete_PID_Controller_out1;

END rtl;

