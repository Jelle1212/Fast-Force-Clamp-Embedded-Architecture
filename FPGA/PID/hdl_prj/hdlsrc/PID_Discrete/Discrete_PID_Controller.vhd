-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\PID_Discrete\Discrete_PID_Controller.vhd
-- Created: 2022-04-11 15:19:06
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Discrete_PID_Controller
-- Source Path: PID_Discrete/PID/Discrete PID Controller
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Discrete_PID_Controller IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        u                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
        P                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        I                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        D                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        N                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        y                                 :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En8
        );
END Discrete_PID_Controller;


ARCHITECTURE rtl OF Discrete_PID_Controller IS

  -- Signals
  SIGNAL u_signed                         : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL P_signed                         : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL PProd_Out_mul_temp               : signed(63 DOWNTO 0);  -- sfix64_En40
  SIGNAL Parallel_P_Gain_out1             : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL I_signed                         : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL IProd_Out_mul_temp               : signed(63 DOWNTO 0);  -- sfix64_En40
  SIGNAL I_Gain_out1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Integrator_u_dtc                 : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Integrator_x_add                 : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Integrator_y_add                 : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Integrator_x_reg                 : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Sum_stage2_add_cast              : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum_stage2_add_cast_1            : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum_op_stage1                    : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL D_signed                         : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL DProd_Out_mul_temp               : signed(63 DOWNTO 0);  -- sfix64_En40
  SIGNAL D_Gain_out1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL N_signed                         : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Filter_x_reg                     : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL N_Gain_out1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Filter_u_add                     : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Filter_out1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL NProd_Out_mul_temp               : signed(63 DOWNTO 0);  -- sfix64_En48
  SIGNAL Sum_stage3_add_cast              : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum_stage3_add_temp              : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum_out1                         : signed(19 DOWNTO 0);  -- sfix20_En8

BEGIN
  -- Feedback Features
  -- 
  -- Derivative
  -- 
  -- Integrator

  u_signed <= signed(u);

  P_signed <= signed(P);

  PProd_Out_mul_temp <= u_signed * P_signed;
  Parallel_P_Gain_out1 <= PProd_Out_mul_temp(47 DOWNTO 16);

  I_signed <= signed(I);

  IProd_Out_mul_temp <= u_signed * I_signed;
  I_Gain_out1 <= IProd_Out_mul_temp(47 DOWNTO 16);

  Integrator_u_dtc <= I_Gain_out1;

  Integrator_y_add <= Integrator_x_add + Integrator_u_dtc;

  Integrator_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '0' THEN
      Integrator_x_reg <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integrator_x_reg <= Integrator_y_add;
      END IF;
    END IF;
  END PROCESS Integrator_reg_process;


  Integrator_x_add <= Integrator_x_reg + Integrator_u_dtc;

  Sum_stage2_add_cast <= resize(Parallel_P_Gain_out1(31 DOWNTO 2), 32);
  Sum_stage2_add_cast_1 <= resize(Integrator_x_add(31 DOWNTO 3), 32);
  Sum_op_stage1 <= Sum_stage2_add_cast + Sum_stage2_add_cast_1;

  D_signed <= signed(D);

  DProd_Out_mul_temp <= u_signed * D_signed;
  D_Gain_out1 <= DProd_Out_mul_temp(47 DOWNTO 16);

  N_signed <= signed(N);

  Filter_u_add <= Filter_x_reg + N_Gain_out1;

  Filter_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '0' THEN
      Filter_x_reg <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Filter_x_reg <= Filter_u_add;
      END IF;
    END IF;
  END PROCESS Filter_reg_process;


  Filter_out1 <= D_Gain_out1 - Filter_x_reg;

  NProd_Out_mul_temp <= Filter_out1 * N_signed;
  N_Gain_out1 <= NProd_Out_mul_temp(55 DOWNTO 24);

  Sum_stage3_add_cast <= resize(N_Gain_out1(31 DOWNTO 2), 32);
  Sum_stage3_add_temp <= Sum_op_stage1 + Sum_stage3_add_cast;
  Sum_out1 <= resize(Sum_stage3_add_temp(31 DOWNTO 14), 20);

  y <= std_logic_vector(Sum_out1);

END rtl;

