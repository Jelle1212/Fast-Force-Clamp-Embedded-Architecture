-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\iir_filter_test\PID.vhd
-- Created: 2022-05-02 14:05:10
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-07
-- Target subsystem base rate: 1e-07
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-07
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Y                             ce_out        1e-07
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PID
-- Source Path: iir_filter_test/PID
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PID IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        U                                 :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20
        Setpoint                          :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        P                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        I                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        D                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        N                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        ce_out                            :   OUT   std_logic;
        Y                                 :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20
        );
END PID;


ARCHITECTURE rtl OF PID IS

  -- Component Declarations
  COMPONENT Discrete_PID_Controller
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          P                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          I                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          D                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          N                               :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          y                               :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Discrete_PID_Controller
    USE ENTITY work.Discrete_PID_Controller(rtl);

  -- Signals
  SIGNAL Setpoint_signed                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL U_signed                         : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL Data_Type_Conversion1_out1       : signed(31 DOWNTO 0);  -- int32
  SIGNAL Sum_out1                         : signed(31 DOWNTO 0);  -- int32
  SIGNAL Discrete_PID_Controller_out1     : std_logic_vector(19 DOWNTO 0);  -- ufix20

BEGIN
  u_Discrete_PID_Controller : Discrete_PID_Controller
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              u => std_logic_vector(Sum_out1),  -- int32
              P => P,  -- int32
              I => I,  -- int32
              D => D,  -- int32
              N => N,  -- int32
              y => Discrete_PID_Controller_out1  -- sfix20
              );

  Setpoint_signed <= signed(Setpoint);

  U_signed <= signed(U);

  Data_Type_Conversion1_out1 <= resize(U_signed, 32);

  Sum_out1 <= Setpoint_signed - Data_Type_Conversion1_out1;

  ce_out <= clk_enable;

  Y <= Discrete_PID_Controller_out1;

END rtl;

